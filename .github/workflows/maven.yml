name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

  Security:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Trivy Installation
      run: |
        sudo apt-get update
        sudo apt-get install -y curl
        curl -sSL https://github.com/aquasecurity/trivy/releases/download/v0.27.0/trivy_0.27.0_Linux-64bit.deb -o trivy.deb
        sudo dpkg -i trivy.deb
    - name: Verify Trivy Installation
      run: trivy --version
    - name: Trivy FS Scan   
      run: trivy fs --format table -o fs-report.json .

  Test:
    runs-on: ubuntu-latest
    needs: Security
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Unit Test
      run: mvn test -X  # Debug with verbose output

  build_project_and_sonar_scan:
    runs-on: ubuntu-latest
    needs: Test
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build Project
      run: mvn package
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: target/*.jar
    - uses: SonarSource/sonarqube-scan-action@v6.0.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  build_docker_image_and_push:
    runs-on: ubuntu-latest
    needs: build_project_and_sonar_scan
    steps:
    - uses: actions/checkout@v4
    - name: Download JAR artifact
      uses: actions/download-artifact@v4
      with:
        name: app-jar
        path: app
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ DOCKERHUB_USERNAME }}
        password: ${{ DOCKERHUB_TOKEN }}
    - name: Build and Push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: junaid757/bankapp:latest
